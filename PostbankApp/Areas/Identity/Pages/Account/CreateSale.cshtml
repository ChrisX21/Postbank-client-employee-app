@page
@using Newtonsoft.Json
@model PostbankApp.Areas.Identity.Pages.Account.CreateSaleModel
@{
}
<head>
    <title>PostBank</title>
</head>
<body style="background-color:burlywood">
    <br />
    <h4 style="color:dimgray"><b>Select your sale percentage, start date and end date. You can toggle notifications to recieve a response from the bank by email.</b></h4>
    <br />
    <form>
        <label for="sale_percentage"><b>Sale percentage:</b> </label>
        <input type="number" id="sale_percentage" name="sale_percentage" placeholder="68" max="100" min="1">
    </form>
    <div class="container">
        <br><br>
        <label><b>From Date</b></label>
        <input type="date" name="" max="" id="fromDate" />
        <br><br>
        <label><b>To Date</b></label>
        <input type="date" name="" min="" id="toDate" />
    </div>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script type="text/javascript">
        var fromDate;
        $('#fromDate').on('change', function () {
            fromDate = $(this).val();
            $('#toDate').prop('min', function () {
                return fromDate;
            })
        });
        var toDate;
        $('#toDate').on('change', function () {
            fromDate = $(this).val();
            $('#fromDate').prop('max', function () {
                return fromDate;
            })
          
        });
        
    </script>
    <div style="display: none;" id="uniqueDivIdName" data-id="@JsonConvert.SerializeObject(@Model)" />
<script var dataFromView = $("#uniqueDivIdName").data("id");></script>
    <br><br>
    <button name="create" type="button" value="Create" autofocus onclick="alert('Request sent. Please wait for a response from the bank.')" style="background-color:white; color:black;">
        <b>Create sale</b>
    </button>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        /* Rounded sliders */
        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }
    </style>
    <br />
    <br />
    <label>Toggle notifications</label>
    <label class="switch">
        <input type="checkbox" checked>
        <span class="slider round"></span>
    </label>
</body>